<?xml version="1.0" encoding="utf-8" ?>
<Application xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:converters="http://xamarin.com/schemas/2020/toolkit"
             xmlns:markdown="clr-namespace:Xam.Forms.Markdown;assembly=Xam.Forms.MarkdownView"
             x:Class="StarterKitApp.App">
    <Application.Resources>

        <Color x:Key="PrimaryColor">#3750D1</Color>
        <Color x:Key="FrameBackgroundColorDark">#1AFFFFFF</Color>
        <Color x:Key="BackgroundColorDark">#121212</Color>
        <Color x:Key="BackgroundColorLight">#EFF2F5</Color>

        <Color x:Key="TextPrimaryColorDark">#FFFFFF</Color>
        <Color x:Key="TextPrimaryColorLight">#323130</Color>

        <markdown:DarkMarkdownTheme x:Key="DarkMarkdownTheme" />
        <markdown:LightMarkdownTheme x:Key="LightMarkdownTheme" />

        <OnPlatform x:Key="ShellForegroundColorLight"
					x:TypeArguments="Color">
            <On Platform="Android"
				Value="{StaticResource TextPrimaryColorDark}" />
            <On Platform="iOS"
				Value="{StaticResource TextPrimaryColorLight}" />
        </OnPlatform>

        <Style x:Key="BaseStyle"
			   TargetType="Element"
			   ApplyToDerivedTypes="True">
            <Setter Property="Shell.BackgroundColor"
					Value="{AppThemeBinding {StaticResource PrimaryColor}}" />
            <Setter Property="Shell.ForegroundColor"
					Value="{AppThemeBinding Dark={StaticResource TextPrimaryColorDark}, Light={StaticResource ShellForegroundColorLight}}" />
            <Setter Property="Shell.TabBarBackgroundColor"
					Value="{AppThemeBinding Dark={StaticResource BackgroundColorDark}, Light={StaticResource BackgroundColorLight}}" />
            <Setter Property="Shell.NavBarHasShadow"
					Value="false" />
            <Setter Property="Shell.UnselectedColor"
					Value="Gray" />
            <Setter Property="Shell.TabBarTitleColor"
					Value="{StaticResource PrimaryColor}" />
        </Style>

        <Style TargetType="TabBar"
			   ApplyToDerivedTypes="True"
			   BasedOn="{StaticResource BaseStyle}">
        </Style>
       
        <Style TargetType="FlyoutItem"
               ApplyToDerivedTypes="True"
               BasedOn="{StaticResource BaseStyle}">
        </Style>

        <Style BasedOn="{StaticResource BaseStyle}"
			   ApplyToDerivedTypes="True"
			   TargetType="Tab" />

        <Style TargetType="Shell"
			   ApplyToDerivedTypes="True">
            <Setter Property="FlyoutBackgroundColor"
					Value="{AppThemeBinding Dark={StaticResource BackgroundColorDark}, Light={StaticResource PrimaryColor}}" />
        </Style>


        <Style TargetType="Label"
			   Class="FlyoutItemLabelStyle">
            <Setter Property="TextColor"
					Value="{StaticResource TextPrimaryColorDark}" />
        </Style>

        <Style TargetType="Layout"
			   Class="FlyoutItemLayoutStyle"
			   ApplyToDerivedTypes="True">
            <Setter Property="BackgroundColor"
					Value="{AppThemeBinding Dark={StaticResource BackgroundColorDark}, Light={StaticResource PrimaryColor}}" />
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor"
										Value="{AppThemeBinding Dark={StaticResource FrameBackgroundColorDark}, Light={StaticResource PrimaryColor}}" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Selected">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor"
										Value="{AppThemeBinding Dark={StaticResource PrimaryColor}, Light={StaticResource FrameBackgroundColorDark}}" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>
        <Style TargetType="markdown:MarkdownView">
            <Setter Property="Theme"
                    Value="{AppThemeBinding Dark={StaticResource DarkMarkdownTheme}, Light={StaticResource LightMarkdownTheme}}" />
        </Style>
        <Style TargetType="Page"
			   ApplyToDerivedTypes="True"
			   BasedOn="{StaticResource BaseStyle}">
            <Setter Property="BackgroundColor"
					Value="{AppThemeBinding Dark={StaticResource BackgroundColorDark}, Light={StaticResource BackgroundColorLight}}" />
        </Style>

        <Style TargetType="Label"
			   ApplyToDerivedTypes="True">
            <Setter Property="TextColor"
					Value="{AppThemeBinding Dark={StaticResource TextPrimaryColorDark}, Light={StaticResource TextPrimaryColorLight}}" />
        </Style>

        <Style TargetType="Frame"
			   ApplyToDerivedTypes="True">
            <Setter Property="BackgroundColor"
                    Value="{AppThemeBinding Dark={StaticResource TextPrimaryColorLight}, Light={StaticResource BackgroundColorLight}}" />
        </Style>
        <Style TargetType="Button"
               ApplyToDerivedTypes="True">
            <Setter Property="BackgroundColor"
                    Value="{AppThemeBinding Dark={StaticResource BackgroundColorDark}, Light={StaticResource BackgroundColorLight}}" />
            <Setter Property="TextColor"
                    Value="{AppThemeBinding Dark={StaticResource TextPrimaryColorDark}, Light={StaticResource TextPrimaryColorLight}}" />
        </Style>
        <Style TargetType="converters:TabViewItem">
            <Setter Property="TextColor"
                    Value="{AppThemeBinding Dark={StaticResource TextPrimaryColorDark}, Light={StaticResource TextPrimaryColorLight}}" />
        </Style>
     
        <converters:InvertedBoolConverter x:Key="InvertedBoolConverter" />
        <converters:IsNotNullOrEmptyConverter  x:Key="IsNotNullOrEmptyConverter" />
    </Application.Resources>
</Application>